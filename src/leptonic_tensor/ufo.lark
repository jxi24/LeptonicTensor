?start: vardef 
| funcdef 
| expr_stmt

funcdef: "def" NAME "(" parameters? ")" ":" expr_stmt -> function
vardef: NAME ":=" expr_stmt                           -> assign

parameters: paramvalue ("," paramvalue)*
?paramvalue: NAME

varargslist: vfpdef ("," vfpdef)*
vfpdef: NAME

arguments: argvalue ("," argvalue)*
?argvalue: expr

dotted_name: NAME ("." NAME)*

?expr_stmt: expr
?expr: term | term "+" expr                     -> add
    | term "-" expr                             -> sub
?term: factor | factor "*" term                 -> mul
    | factor "/" term                           -> div
?factor: "+"factor                              -> pos
    | "-"factor                                 -> neg
    | power
?power: atom_expr ("**" factor)?                -> pow

?atom_expr: dotted_name "(" [arguments] ")"     -> call
    | atom
    | "(" expr ")"

?atom: dotted_name                              -> var
    | number

number: DEC_NUMBER                              -> decimal
    | FLOAT_NUMBER                              -> real
    | IMAG_NUMBER                               -> imaginary

// Tokens
NAME: /[a-zA-Z_]\w*/
COMMENT: /#[^\n]*/

DEC_NUMBER: /0|[1-9]\d*/i
FLOAT_NUMBER.2: /((\d+\.\d*|\.\d+)(e[-+]?\d+)?|\d+(e[-+]?\d+))/i
IMAG_NUMBER.2: /\d+j/i | FLOAT_NUMBER "j"i

%import common.WS_INLINE
%ignore WS_INLINE
%ignore COMMENT
